<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:camel="http://camel.apache.org/schema/blueprint"
    xmlns:camelcxf="http://camel.apache.org/schema/blueprint/cxf"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
    xmlns:cxf="http://cxf.apache.org/blueprint/core"
    xmlns:jaxrs="http://cxf.apache.org/blueprint/jaxrs"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="              http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd              http://cxf.apache.org/blueprint/jaxrs http://cxf.apache.org/schemas/blueprint/jaxrs.xsd              http://cxf.apache.org/blueprint/core http://cxf.apache.org/schemas/blueprint/core.xsd              ">
    <!-- <cm:property-placeholder id="mel-config" -->
    <!-- persistent-id="fr.mel.integration.fileconfig"> -->
    <!-- <cm:default-properties> -->
    <!-- <cm:property name="filename.input" value="appdata/in/*.txt" /> -->
    <!-- </cm:default-properties> -->
    <!-- </cm:property-placeholder> -->
    <camelContext id="loginput" streamCache="true" trace="false" xmlns="http://camel.apache.org/schema/blueprint">
        <route id="loginput-route">
            <!-- <throwException exceptionType="java.lang.IllegalArgumentException" 
				message="MEL Custom Exception"/> -->
            <from id="timer-input" uri="timer://myInputTimer?repeatCount=1&amp;delay=7000"/>
            <onException id="exception2">
                <exception>java.lang.Throwable</exception>
                <!-- <handled> -->
                <!-- <constant>true</constant> -->
                <!-- </handled> -->
                <log id="_error2" message="[MEL APPLICATION] :: exchange ${id} failed"/>
            </onException>
            <setProperty id="set_exch" propertyName="myExchangeProp">
                <simple>SomeExchangeValue</simple>
            </setProperty>
            <setHeader headerName="mel.myHeader" id="_setHeader2">
                <simple>mydata</simple>
                <!-- <simple>${id}</simple> -->
            </setHeader>
            <!--<log id="log_exch" message="Exchange property :: ${exchangeProperty.myExchangeProp}"/>-->
            <setBody id="_setBody2">
                <constant>this is the content of the body</constant>
            </setBody>
            <log id="data-line1" message="------------ MAIN ROUTE -----------------"/>
            <log id="data-context-meta" message="[MEL APPLICATION] :: Context name "/>
            <log id="data-context" message="${camelId}"/>
            <log id="data-route-meta" message="[MEL APPLICATION] :: Route name "/>
            <log id="data-route" message="${routeId}"/>
            <log id="data-exchangeId-meta" message="[MEL APPLICATION] :: ExchangeId "/>
            <log id="data-exchangeId" message="${exchangeId}"/>
            <log id="data-messageId-meta" message="[MEL APPLICATION] :: MessageId "/>
            <log id="data-messageId" message="${id}"/>
            <to id="_to1" uri="direct:next"/>
        </route>
        <route id="next-route">
            <from id="_from1" uri="direct:next"/>
            <log id="data-line2" message="------------ EMBEDDED ROUTE --------- ---"/>
            <log id="data-context-meta2" message="[MEL APPLICATION] :: Context name "/>
            <log id="data-context2" message="${camelId}"/>
            <log id="data-route-meta2" message="[MEL APPLICATION] :: Route name "/>
            <log id="data-route2" message="${routeId}"/>
            <log id="data-exchangeId-meta2" message="[MEL APPLICATION] :: ExchangeId "/>
            <log id="data-exchangeId2" message="${exchangeId}"/>
            <log id="data-messageId-meta2" message="[MEL APPLICATION] :: MessageId "/>
            <log id="data-messageId2" message="${id}"/>
        </route>
    </camelContext>
</blueprint>
