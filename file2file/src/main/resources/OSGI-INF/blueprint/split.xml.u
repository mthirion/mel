<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:camel="http://camel.apache.org/schema/blueprint"
    xmlns:camelcxf="http://camel.apache.org/schema/blueprint/cxf"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
    xmlns:cxf="http://cxf.apache.org/blueprint/core"
    xmlns:jaxrs="http://cxf.apache.org/blueprint/jaxrs"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="              http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd              http://cxf.apache.org/blueprint/jaxrs http://cxf.apache.org/schemas/blueprint/jaxrs.xsd              http://cxf.apache.org/blueprint/core http://cxf.apache.org/schemas/blueprint/core.xsd              ">
    <!-- <cm:property-placeholder id="mel-config" -->
    <!-- persistent-id="fr.mel.integration.fileconfig"> -->
    <!-- <cm:default-properties> -->
    <!-- <cm:property name="filename.input" value="appdata/in/*.txt" /> -->
    <!-- </cm:default-properties> -->
    <!-- </cm:property-placeholder> -->
    <camelContext id="splitfile" streamCache="true" trace="false" xmlns="http://camel.apache.org/schema/blueprint">
        <route id="splitfile-route">
            <from id="splitfile-input" uri="file:///redhat/tmp/mel/appdata/in?antInclude=*.txt&amp;delay=1000&amp;move=../done&amp;preMove=../ongoing&amp;moveFailed=failed"/>
            <onException id="_onException1">
                <exception>java.lang.Throwable</exception>
                <!-- <handled> -->
                <!-- <constant>true</constant> -->
                <!-- </handled> -->
                <log id="_error" message="[MEL APPLICATION] :: exchange ${id} failed"/>
            </onException>
            <log id="_log1" message="[MEL APPLICATION] :: Input message "/>
            <log id="logmsg" message="${body}"/>
            <delay id="_delay1">
                <constant id="sleep">8000</constant>
            </delay>
            <setHeader headerName="inputfilename" id="_setHeader1">
                <simple>${header.CamelFileName}</simple>
            </setHeader>
            <split id="_split1" streaming="true">
                <tokenize token="\n"/>
                <setHeader headerName="CamelFileName" id="_setHeader2">
                    <simple>${header.inputfilename}-${header.CamelSplitIndex}</simple>
                </setHeader>
                <to id="_to1" uri="direct:logging"/>
            </split>
        </route>
        <route id="direct-logging">
            <from id="splitted-route" uri="direct:logging"/>
            <to id="chunks" uri="file:///redhat/tmp/mel/appdata/out"/>
        </route>
    </camelContext>
</blueprint>
